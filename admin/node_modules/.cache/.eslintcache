[{"D:\\Tanot\\admin\\src\\index.js":"1","D:\\Tanot\\admin\\src\\reportWebVitals.js":"2","D:\\Tanot\\admin\\src\\App.js":"3","D:\\Tanot\\admin\\src\\Core\\Orders Pages\\Orders.js":"4","D:\\Tanot\\admin\\src\\Core\\Dashboard.js":"5","D:\\Tanot\\admin\\src\\Core\\User Pages\\User.js":"6","D:\\Tanot\\admin\\src\\Core\\Orders Pages\\Order.js":"7","D:\\Tanot\\admin\\src\\Core\\User Pages\\Users.js":"8","D:\\Tanot\\admin\\src\\Core\\Product Pages\\AddProduct.js":"9","D:\\Tanot\\admin\\src\\Core\\Product Pages\\Products.js":"10","D:\\Tanot\\admin\\src\\Core\\Product Pages\\EditProduct.js":"11","D:\\Tanot\\admin\\src\\Core\\Complaints\\Complaints.js":"12","D:\\Tanot\\admin\\src\\Components\\Sidebar.js":"13","D:\\Tanot\\admin\\src\\Core\\Category Pages\\Categories.js":"14","D:\\Tanot\\admin\\src\\Core\\Category Pages\\AddCategory.js":"15","D:\\Tanot\\admin\\src\\Core\\Category Pages\\CategoryProduct.js":"16","D:\\Tanot\\admin\\src\\Core\\Category Pages\\EditCategory.js":"17","D:\\Tanot\\admin\\src\\Core\\Auth\\Auth.js":"18","D:\\Tanot\\admin\\src\\Components\\contextProvider.js":"19"},{"size":622,"mtime":1687770281058,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1687242909494,"results":"22","hashOfConfig":"21"},{"size":1479,"mtime":1688900397762,"results":"23","hashOfConfig":"21"},{"size":3420,"mtime":1688900397767,"results":"24","hashOfConfig":"21"},{"size":5543,"mtime":1687686124748,"results":"25","hashOfConfig":"21"},{"size":4144,"mtime":1687686124752,"results":"26","hashOfConfig":"21"},{"size":11535,"mtime":1688900397766,"results":"27","hashOfConfig":"21"},{"size":3485,"mtime":1687686124753,"results":"28","hashOfConfig":"21"},{"size":13304,"mtime":1688900397768,"results":"29","hashOfConfig":"21"},{"size":2727,"mtime":1687686124751,"results":"30","hashOfConfig":"21"},{"size":11782,"mtime":1688900397769,"results":"31","hashOfConfig":"21"},{"size":3970,"mtime":1687686124747,"results":"32","hashOfConfig":"21"},{"size":4201,"mtime":1688900397763,"results":"33","hashOfConfig":"21"},{"size":2617,"mtime":1687514317066,"results":"34","hashOfConfig":"21"},{"size":3224,"mtime":1687514317064,"results":"35","hashOfConfig":"21"},{"size":3985,"mtime":1687514317068,"results":"36","hashOfConfig":"21"},{"size":4334,"mtime":1687514317069,"results":"37","hashOfConfig":"21"},{"size":2578,"mtime":1688900397764,"results":"38","hashOfConfig":"21"},{"size":387,"mtime":1687770281055,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"16gqs75",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"D:\\Tanot\\admin\\src\\index.js",[],["89","90"],"D:\\Tanot\\admin\\src\\reportWebVitals.js",[],"D:\\Tanot\\admin\\src\\App.js",[],"D:\\Tanot\\admin\\src\\Core\\Orders Pages\\Orders.js",["91","92","93"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport Sidebar from \"../../Components/Sidebar\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport \"./Orders.css\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Orders() {\r\n  const [orders, setOrders] = useState([]);\r\n  const [pages, setPages] = useState(5);\r\n\r\n  useEffect(() => {\r\n    getOrders();\r\n  }, []);\r\n\r\n  const getOrders = () => {\r\n    setOrders();\r\n    axios({\r\n      method: \"get\",\r\n      url: \"/admin/Allorders\",\r\n    }).then((response) => {\r\n      setOrders(response.data);\r\n      // console.log(response.data);\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      field: \"orderId\",\r\n      headerName: \"Order ID\",\r\n      width: 200,\r\n      renderCell: (params) => {\r\n        const id = params.row.id;\r\n        return <Link to={`/orders/${id}`}>{params.value}</Link>;\r\n      },\r\n    },\r\n    {\r\n      field: \"userId\",\r\n      headerName: \"Customer ID\",\r\n      width: 200,\r\n    },\r\n    {\r\n      field: \"userName\",\r\n      headerName: \"Customer name\",\r\n      width: 240,\r\n    },\r\n    {\r\n      field: \"userPhone\",\r\n      headerName: \"Customer Phone\",\r\n      width: 200,\r\n    },\r\n    {\r\n      field: \"status\",\r\n      headerName: \"Order Status\",\r\n      width: 160,\r\n    },\r\n    {\r\n      field: \"orderAmount\",\r\n      headerName: \"Order Amount\",\r\n      width: 160,\r\n    },\r\n    {\r\n        field:\"payment\",\r\n        headerName:\"Payment method\",\r\n        width:150,\r\n    },\r\n    {\r\n      field: \"orderedAt\",\r\n      headerName: \"Order Date\",\r\n      width: 160,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"dashboard-parent-div\">\r\n      <Row>\r\n        <Col lg={2}>\r\n          <Sidebar />\r\n        </Col>\r\n        <Col className=\"orders-content\" lg={10}>\r\n          <h4>Orders</h4>\r\n          <p>Here is the list of all the orders placed on your website</p>\r\n          <hr />\r\n          {orders && (\r\n            <div style={{ height: 600, width: \"100%\" }}>\r\n              <DataGrid\r\n                rows={orders.map((order) => {\r\n                  console.log(order);\r\n                  return {\r\n                    id: order._id,\r\n                    orderId: order.orderId,\r\n                    userId: order.userId.email,\r\n                    userName: order.userId.name,\r\n                    userPhone: order.address.phone,\r\n                    status:\r\n                      order.status == \"placed\"\r\n                        ? \"Placed\"\r\n                        : order.status == \"shipped\"\r\n                        ? \"Shipped\"\r\n                        : order.status == \"delivered\"\r\n                        ? \"Delivered\"\r\n                        : \"Cancelled\",\r\n                    orderAmount: `Rs. ${order.orderAmount\r\n                      .toString()\r\n                      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}/-`,\r\n                      payment:order.payment,\r\n                    orderedAt: order.orderedAt,\r\n                  };\r\n                })}\r\n                columns={columns}\r\n                pageSize={pages}\r\n                className=\"orders-data-grid\"\r\n                rowsPerPageOptions={[5, 10, 15, 20, 25]}\r\n                onPageSizeChange={(pageSize) => {\r\n                  setPages(pageSize);\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Orders;\r\n","D:\\Tanot\\admin\\src\\Core\\Dashboard.js",["94"],"import React, { useEffect, useState } from \"react\";\r\nimport { Card, Col, Row } from \"react-bootstrap\";\r\nimport Sidebar from \"../Components/Sidebar\";\r\nimport {\r\n  RiShoppingCart2Line,\r\n  RiUser3Line,\r\n  RiFeedbackLine,\r\n} from \"react-icons/ri\";\r\nimport { IoIosLaptop } from \"react-icons/io\";\r\nimport { BiRupee } from \"react-icons/bi\";\r\nimport { BsViewList } from \"react-icons/bs\";\r\nimport { FaLaptopMedical } from \"react-icons/fa\";\r\n\r\nimport \"./Dashboard.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction Dashboard() {\r\n  const [orders, setOrders] = useState();\r\n  const [totalRevenue, setTotalRevenue] = useState();\r\n  const [products, setProducts] = useState();\r\n  const [users, setUsers] = useState();\r\n\r\n  useEffect(() => {\r\n    getOrders();\r\n    getUsers();\r\n    getProducts();\r\n  }, []);\r\n\r\n  const getProducts = () => {\r\n    setProducts();\r\n    axios({\r\n      method: \"get\",\r\n      url: \"/getproducts\",\r\n    }).then((response) => {\r\n      setProducts(response.data);\r\n    });\r\n  };\r\n\r\n  const getUsers = () => {\r\n    setUsers();\r\n    axios({\r\n      method: \"get\",\r\n      url: \"/Allusers\",\r\n    }).then((response) => {\r\n      setUsers(response.data);\r\n    });\r\n  };\r\n\r\n  const getOrders = () => {\r\n    setOrders();\r\n    axios({\r\n      method: \"get\",\r\n      url: \"/admin/Allorders\",\r\n    }).then((response) => {\r\n      setOrders(response.data);\r\n      let rev = 0;\r\n      response.data.forEach((order) => {\r\n        rev += order.orderAmount;\r\n      });\r\n      setTotalRevenue(rev);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-parent-div\">\r\n      <Row>\r\n        <Col lg={2}>\r\n          <Sidebar />\r\n        </Col>\r\n        <Col className=\"dashboard-home-content\" lg={10}>\r\n          <h4>Dashboard</h4>\r\n          <p>Here's an overview of your online business.</p>\r\n          <Row>\r\n            <Col>\r\n              {orders && (\r\n                <Card className=\"dashboard-card\">\r\n                  <RiShoppingCart2Line className=\"card-icon\" />\r\n                  <h4>{orders.length} Orders </h4>\r\n                  <p>{orders.length} orders placed</p>\r\n                </Card>\r\n              )}\r\n            </Col>\r\n            <Col>\r\n              {totalRevenue && (\r\n                <Card className=\"dashboard-card\">\r\n                  <BiRupee className=\"card-icon\" />\r\n                  <h4>\r\n                    {totalRevenue\r\n                      .toString()\r\n                      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}{\" \"}\r\n                    Total Revenue\r\n                  </h4>\r\n                  <p>\r\n                    {totalRevenue\r\n                      .toString()\r\n                      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}{\" \"}\r\n                    revenue generated\r\n                  </p>\r\n                </Card>\r\n              )}\r\n            </Col>\r\n            <Col>\r\n              {products && (\r\n                <Card className=\"dashboard-card\">\r\n                  <IoIosLaptop className=\"card-icon\" />\r\n                  <h4>{products.length} Products</h4>\r\n                  <p>{products.length} products added</p>\r\n                </Card>\r\n              )}\r\n            </Col>\r\n            <Col>\r\n              {users && (\r\n                <Card className=\"dashboard-card\">\r\n                  <RiUser3Line className=\"card-icon\" />\r\n                  <h4>{users.length} Customers</h4>\r\n                  <p>{users.length} registered customers</p>\r\n                </Card>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n          <h4>Quick Links</h4>\r\n          <Row>\r\n            <Col>\r\n              <Card className=\"dashboard-action-card\">\r\n                <IoIosLaptop className=\"action-icon\" />\r\n                <h4>All products</h4>\r\n                <p>\r\n                  <Link to=\"/products\">Click here</Link> to view, remove or edit\r\n                  products\r\n                </p>\r\n              </Card>\r\n            </Col>\r\n            <Col>\r\n              <Card className=\"dashboard-action-card\">\r\n                <FaLaptopMedical className=\"action-icon\" />\r\n                <h4>Add Products</h4>\r\n                <p>\r\n                  <Link to=\"/products/add\">Click here</Link> to add new products\r\n                </p>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col lg={4}>\r\n              <Card className=\"dashboard-action-card\">\r\n                <RiShoppingCart2Line className=\"action-icon\" />\r\n                <h4>All Orders</h4>\r\n                <p>\r\n                  <Link to=\"/orders\">Click here</Link> to view, remove or edit\r\n                  orders\r\n                </p>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={4}>\r\n              <Card className=\"dashboard-action-card\">\r\n                <RiUser3Line className=\"action-icon\" />\r\n                <h4>All Customers</h4>\r\n                <p>\r\n                  <Link to=\"/users\">Click here</Link> to view registered\r\n                  customer details\r\n                </p>\r\n              </Card>\r\n            </Col>\r\n            <Col>\r\n              <Card className=\"dashboard-action-card\">\r\n                <RiFeedbackLine className=\"action-icon\" />\r\n                <h4>Complaints & Feedbacks</h4>\r\n                <p>\r\n                  <Link to=\"/complaints\">Click here</Link> view complaints and\r\n                  feedbacks\r\n                </p>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;","D:\\Tanot\\admin\\src\\Core\\User Pages\\User.js",["95","96","97","98"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Card, Col, Row } from \"react-bootstrap\";\r\nimport Sidebar from \"../../Components/Sidebar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  RiMailLine,\r\n  RiPhoneLine,\r\n  RiHome2Line,\r\n  RiShoppingCartLine,\r\n} from \"react-icons/ri\";\r\n\r\nimport \"./User.css\";\r\n\r\nfunction User(props) {\r\n  const [user, setUser] = useState();\r\n  const [orders, setOrders] = useState([]);\r\n  const userId = props.match.params.userId;\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n    getOrders();\r\n  }, []);\r\n\r\n  const getUser = async() => {\r\n    setUser();\r\n   await axios({\r\n      method: \"get\",\r\n      url: `/adminuser/${userId}`,\r\n    }).then((response) => {\r\n      setUser(response.data);\r\n    });\r\n  };\r\n\r\n  const getOrders = async() =>{\r\n    setOrders([]);\r\n    await axios({\r\n      method: \"get\",\r\n      url: `/admin/orders/${userId}`,\r\n    }).then((response) =>{\r\n      setOrders(response.data);\r\n      // console.log(response.data);\r\n    })\r\n  }\r\n  return (\r\n    <div className=\"dashboard-parent-div\">\r\n      <Row>\r\n        <Col lg={2}>\r\n          <Sidebar />\r\n        </Col>\r\n        {user && (\r\n          <Col className=\"user-content\" lg={10}>\r\n            <Card className=\"single-user-card\">\r\n              <Row>\r\n                <Col className=\"user-details-col\">\r\n                  <h4>{user.name}</h4>\r\n                  <hr />\r\n                  {/* <p>\r\n                    <RiHome2Line className=\"icon\" /> {user.address}, {user.city}\r\n                    , {user.state} - {user.pin}\r\n                  </p> */}\r\n                  {/* <p>\r\n                    <RiPhoneLine className=\"icon\" /> {user.phone}\r\n                  </p> */}\r\n                  <p>\r\n                    <RiMailLine className=\"icon\" /> {user.email}\r\n                  </p>\r\n                  {/* <p>\r\n                    <RiShoppingCartLine className=\"icon\" />{\" \"}\r\n                    {user.orders.length.toString()} order(s) placed so far.\r\n                  </p> */}\r\n                </Col>\r\n                <Col className=\"user-orders-col\">\r\n                  <h6>Orders</h6>\r\n                  <div className=\"orders-div\">\r\n                    {orders.map((order) => {\r\n                      return (\r\n                        <Card className=\"user-order-card\">\r\n                          <Row>\r\n                            <Col>\r\n                              <p>\r\n                                Order ID :{\" \"}\r\n                                <Link to={`/orders/${order._id}`}>\r\n                                  {order._id}\r\n                                </Link>{\" \"}\r\n                              </p>\r\n                              <p>Order Date : {order.orderedAt}</p>\r\n                              <p>\r\n                                Order Amount : Rs.{\" \"}\r\n                                {order.orderAmount\r\n                                  .toString()\r\n                                  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                /-\r\n                              </p>\r\n                            </Col>\r\n                            <Col>\r\n                              <p>\r\n                                Order Status :{\" \"}\r\n                                {order.status === \"placed\"\r\n                                  ? \"Placed\"\r\n                                  : order.status === \"shipped\"\r\n                                  ? \"Shipped\"\r\n                                  : order.status === \"delivered\"\r\n                                  ? \"Delivered\"\r\n                                  : \"Cancelled\"}\r\n                              </p>\r\n                              <p>Shipping Status : {order.shippedAt}</p>\r\n                              <p>Delivery Status : {order.deliveredAt}</p>\r\n                            </Col>\r\n                          </Row>\r\n                        </Card>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Card>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;","D:\\Tanot\\admin\\src\\Core\\Orders Pages\\Order.js",["99","100","101","102"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Card, Col, Row } from \"react-bootstrap\";\r\nimport Sidebar from \"../../Components/Sidebar\";\r\nimport {\r\n  RiMailLine,\r\n  RiPhoneLine,\r\n  RiHome2Line,\r\n  RiUser3Line,\r\n  RiUserLocationLine,\r\n  RiCalendarEventLine,\r\n  RiCalendarTodoLine,\r\n  RiCalendarCheckLine,\r\n  RiMoneyDollarCircleLine,\r\n  RiQuestionLine,\r\n} from \"react-icons/ri\";\r\n\r\nimport \"./Order.css\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction Order(props) {\r\n  const [order, setOrder] = useState({});\r\n  const weekday = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\r\n  const month = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  const history = useHistory();\r\n  const orderId = props.match.params.orderId;  //to retrieve order id\r\n  useEffect(() => {\r\n    getOrder();\r\n  }, []);\r\n\r\n  const getOrder = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `/admin/order/${orderId}`,\r\n    }).then((response) => {\r\n      setOrder(response.data);\r\n      // console.log(response.data.productIds);\r\n    });\r\n  };\r\n\r\n  const updateOrderStatus = (event, status, shippedAt, deliveredAt) => {\r\n    event.preventDefault();\r\n    // console.log(status+\"\\n\");\r\n    // console.log(shippedAt+\"\\n\");\r\n    // console.log(deliveredAt+\"\\n\");\r\n    axios({\r\n      method: \"patch\",\r\n      url: `/admin/orders/${orderId}`,\r\n      data: {\r\n        status: status,\r\n        shippedAt: shippedAt,\r\n        deliveredAt: deliveredAt,\r\n      },\r\n    }).then((res) => {\r\n      history.push(\"/orders\");\r\n    });\r\n  };\r\n\r\n  const deleteOrder = (event) => {\r\n    event.preventDefault();\r\n    axios({\r\n      method: \"delete\",\r\n      url: `/admin/orders/${orderId}`,\r\n    }).then(() => {\r\n      history.push(\"/orders\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-parent-div\">\r\n      <Row>\r\n        <Col lg={2}>\r\n          <Sidebar />\r\n        </Col>\r\n        <Col className=\"single-order-content\" lg={10}>\r\n          {order && order.userId && (\r\n            <Card className=\"order-card\">\r\n              <Row className=\"order-user-details\">\r\n                <Col>\r\n                  <Row>\r\n                    <Col className=\"user-detail-col\">\r\n                      <p>\r\n                        <RiUser3Line className=\"user-icon\" />{\" \"}\r\n                        {order.userId.name}\r\n                      </p>\r\n                      <p>\r\n                        <RiPhoneLine className=\"user-icon\" />{\" \"}\r\n                        {order.address.phone}\r\n                      </p>\r\n                      <p>\r\n                        <RiMailLine className=\"user-icon\" />{\" \"}\r\n                        {order.userId.email}\r\n                      </p>\r\n                      <p>\r\n                        <RiHome2Line className=\"user-icon\" />{\" \"}\r\n                        {order.address.name}, {order.address.landmark} -{\" \"}\r\n                        {order.address.city}, ({order.address.pincode})\r\n                      </p>\r\n                      <p>\r\n                        <RiUserLocationLine className=\"user-icon\" />{\" \"}\r\n                        {order.address.state}\r\n                      </p>\r\n                    </Col>\r\n                    <Col className=\"order-detail-col\">\r\n                      <p>\r\n                        <RiQuestionLine className=\"order-icon\" />{\" \"}\r\n                        {order.status == \"placed\"\r\n                          ? \"Placed\"\r\n                          : order.status == \"shipped\"\r\n                            ? \"Shipped\"\r\n                            : order.status == \"delivered\"\r\n                              ? \"Delivered\"\r\n                              : \"Cancelled\"}\r\n                      </p>\r\n                      <p>\r\n                        <RiMoneyDollarCircleLine className=\"order-icon\" />{\" \"}\r\n                        {`Rs. ${order.orderAmount\r\n                          .toString()\r\n                          .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}/-`}\r\n                      </p>\r\n                      <p>\r\n                        <RiCalendarEventLine className=\"order-icon\" />{\" \"}\r\n                        {order.orderedAt}\r\n                      </p>\r\n                      <p>\r\n                        <RiCalendarTodoLine className=\"order-icon\" />{\" \"}\r\n                        {order.shippedAt}\r\n                      </p>\r\n                      <p>\r\n                        <RiCalendarCheckLine className=\"order-icon\" />{\" \"}\r\n                        {order.deliveredAt}\r\n                      </p>\r\n                      <p><b>Payment:  {order.payment} </b></p>\r\n                      <p><b>Payment Id: {order.rzpPaymentId}</b></p>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"order-actions\">\r\n                <Col>\r\n                  <button\r\n                    onClick={(e) => {\r\n                      let date = new Date();\r\n                      const day = weekday[date.getDay()];\r\n                      updateOrderStatus(\r\n                        e,\r\n                        \"shipped\",\r\n                        `${day}, ${date.getDate()} ${month[date.getMonth()]\r\n                        } ${date.getFullYear()}`,\r\n                        \"Not yet delivered\"\r\n                      );\r\n                    }}\r\n                  >\r\n                    Order Shipped\r\n                  </button>\r\n                </Col>\r\n                <Col>\r\n                  <button\r\n                    onClick={(e) => {\r\n                      let date = new Date();\r\n                      const day = weekday[date.getDay()];\r\n                      updateOrderStatus(\r\n                        e,\r\n                        \"delivered\",\r\n                        order.shippedAt,\r\n                        `${day}, ${date.getDate()} ${month[date.getMonth()]\r\n                        } ${date.getFullYear()}`\r\n                      );\r\n                    }}\r\n                  >\r\n                    Order Delivered\r\n                  </button>\r\n                </Col>\r\n                <Col>\r\n                  <button\r\n                    onClick={(e) => {\r\n                      updateOrderStatus(\r\n                        e,\r\n                        \"cancelled\",\r\n                        order.shippedAt,\r\n                        order.deliveredAt\r\n                      );\r\n                    }}\r\n                  >\r\n                    Order Cancelled\r\n                  </button>\r\n                </Col>\r\n                <Col>\r\n                  <button onClick={deleteOrder}>Delete Order</button>\r\n                </Col>\r\n              </Row>\r\n              <div className=\"order-products-div\">\r\n                {/* {console.log(order.productIds)} */}\r\n                {order.productIds &&\r\n                  order.productIds.map((productId, index) => {\r\n\r\n                    return (\r\n                      <Card className=\"order-product-card\">\r\n                        <Row className=\"product-card-row\">\r\n                          <Col className=\"product-order-details\" lg={10}>\r\n                            <Row>\r\n                              <Col>\r\n                                <Row>\r\n                                  <Col lg={2}>\r\n                                    <p>Name :</p>\r\n                                  </Col>\r\n                                  <Col>\r\n                                    <p>\r\n                                      <strong>{productId.title}</strong>\r\n                                    </p>\r\n                                  </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                  <Col lg={2}>\r\n                                    <p>Price :</p>\r\n                                  </Col>\r\n                                  <Col>\r\n                                    <p>\r\n                                      <strong>\r\n                                        Rs.{\" \"}\r\n                                        {productId.price\r\n                                          .toString()\r\n                                          .replace(\r\n                                            /\\B(?=(\\d{3})+(?!\\d))/g,\r\n                                            \",\"\r\n                                          )}\r\n                                        /-\r\n                                      </strong>\r\n                                    </p>\r\n                                  </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                  <Col lg={2}>\r\n                                    <p>Category :</p>\r\n                                  </Col>\r\n                                  <Col>\r\n                                    <p>\r\n                                      <strong>{productId.category}</strong>\r\n                                    </p>\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>\r\n                              <Col>\r\n                                <Row>\r\n                                  <Col lg={2}>\r\n                                    <p>Size : <strong>{order.size[index]}</strong></p>\r\n                                  </Col>\r\n                                  <Col>\r\n                                    <p>\r\n                                      Quantity :<strong> {order.quantity[index]}</strong>\r\n                                    </p>\r\n                                  </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                  <Col lg={2}>\r\n                                    <p>Item Total :</p>\r\n                                  </Col>\r\n                                  <Col>\r\n                                    <p>\r\n                                      <strong>\r\n                                        Rs.&nbsp;\r\n                                        {(productId.price*order.quantity[index])\r\n                                          .toString()\r\n                                          .replace(\r\n                                            /\\B(?=(\\d{3})+(?!\\d))/g,\r\n                                            \",\"\r\n                                          )}\r\n                                        /-\r\n                                      </strong>\r\n                                    </p>\r\n                                  </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                  <Col lg={2}>\r\n                                    <p>Description :</p>\r\n                                  </Col>\r\n                                  <Col>\r\n                                    <p>\r\n                                      <strong>\r\n                                        {productId.description}\r\n                                      </strong>\r\n                                    </p>\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n                        </Row>\r\n                      </Card>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </Card>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Order;\r\n","D:\\Tanot\\admin\\src\\Core\\User Pages\\Users.js",[],"D:\\Tanot\\admin\\src\\Core\\Product Pages\\AddProduct.js",["103","104","105","106"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport Sidebar from \"../../Components/Sidebar\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./AddProduct.css\";\r\n\r\nfunction AddProduct() {\r\n  const [newProduct, setNewProduct] = useState({\r\n    title: \"\",\r\n    mrp: \"\",\r\n    price: \"\",\r\n    discount: \"\",\r\n    S_stock: \"\",\r\n    M_stock: \"\",\r\n    L_stock: \"\",\r\n    XL_stock: \"\",\r\n    XXL_stock: \"\",\r\n    category: \"\",\r\n    description: \"\",\r\n    fabric: \"\",\r\n    sleeveLength: \"\",\r\n    pattern: \"\",\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setNewProduct((prev) => {\r\n      return { ...prev, [name]: value };\r\n    });\r\n  };\r\n\r\n  const [images, setImages] = useState([]);\r\n\r\n  // function handleImageChange(event) {\r\n  //   let selectedFile = event.target.files[0];\r\n  //   if (selectedFile && types.includes(selectedFile.type)) {\r\n  //     setImage(selectedFile);\r\n  //     setImagePreview(URL.createObjectURL(selectedFile));\r\n  //   } else {\r\n  //     setImage(null);\r\n  //   }\r\n  // }\r\n\r\n  // const handleImageChange = (event) => {\r\n  //   const selectedFiles = Array.from(event.target.files);\r\n  //   const validFiles = selectedFiles.filter(\r\n  //     (file) => types.includes(file.type)\r\n  //   );\r\n\r\n  //   setImages(validFiles);\r\n  // };\r\n\r\n  const addProduct = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", newProduct.title);\r\n      formData.append(\"mrp\", newProduct.mrp);\r\n      formData.append(\"price\", newProduct.price);\r\n      formData.append(\"discount\", newProduct.discount);\r\n      // formData.append(\"S_stock\", newProduct.S_stock);\r\n      // formData.append(\"M_stock\", newProduct.M_stock);\r\n      // formData.append(\"L_stock\", newProduct.L_stock);\r\n      // formData.append(\"XL_stock\", newProduct.XL_stock);\r\n      // formData.append(\"XXL_stock\", newProduct.XXL_stock);\r\n      formData.append(\"category\", newProduct.category);\r\n      formData.append(\"description\", newProduct.description);\r\n      formData.append(\"fabric\", newProduct.fabric);\r\n      formData.append(\"pattern\", newProduct.pattern);\r\n      formData.append(\"sleeveLength\", newProduct.sleeveLength);\r\n      // console.log(formData.get(\"title\"));\r\n\r\n      // Append the imageFiles array to the formData as a single field\r\n      images.forEach((image) => {\r\n        formData.append(\"images\", image);\r\n      });\r\n      // console.log(\"images\"+images);\r\n      // Log the formData to check if the images were uploaded correctly\r\n      // console.log(\"FormData:\", formData.get(\"images\"));\r\n\r\n      await axios({\r\n        method: \"post\",\r\n        url: \"/products/add\",\r\n        data: formData,\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      }).then(async (response) => {\r\n        if (response.status == 201) {\r\n          // setImagePreview();\r\n          setImages([]);\r\n          setNewProduct({\r\n            title: \"\",\r\n            mrp: \"\",\r\n            price: \"\",\r\n            discount: \"\",\r\n            S_stock: \"\",\r\n            M_stock: \"\",\r\n            L_stock: \"\",\r\n            XL_stock: \"\",\r\n            XXL_stock: \"\",\r\n            category: \"\",\r\n            description: \"\",\r\n            fabric: \"\",\r\n            sleeveLength: \"\",\r\n            pattern: \"\",\r\n          });\r\n          alert(\"data added\");\r\n        }\r\n        else {\r\n          alert(\"data not added\")\r\n        }\r\n      });\r\n    } catch (err) {\r\n      alert(\"Product not added to site. Please fill all the filds of form.\")\r\n      console.log(\"Error : \" + err.message);\r\n    }\r\n  };\r\n\r\n  const imagesHandle = (event) => {\r\n    const inputValue = event.target.value;\r\n    setImages(prevImages => [...prevImages, inputValue]);\r\n  };\r\n  return (\r\n    <div className=\"dashboard-parent-div\">\r\n      <Row>\r\n        <Col lg={2}>\r\n          <Sidebar />\r\n        </Col>\r\n        <Col className=\"add-product-content\" lg={10}>\r\n          <h4>Add Product</h4>\r\n          <p>\r\n            Please fill the product details in the form below to add a new\r\n            product.\r\n          </p>\r\n          <Card className=\"add-product-form-card\">\r\n            <Row>\r\n              <Col>\r\n                <div className=\"add-product-input-div\">\r\n                  <p>Product Name</p>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    value={newProduct.title}\r\n                    onChange={handleChange}\r\n                    autoComplete=\"off\"\r\n                  ></input>\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"add-product-input-div\">\r\n                  <p>Product MRP</p>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"mrp\"\r\n                    value={newProduct.mrp}\r\n                    onChange={handleChange}\r\n                    autoComplete=\"off\"\r\n                  ></input>\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"add-product-input-div\">\r\n                  <p>Product Price</p>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    value={newProduct.price}\r\n                    onChange={handleChange}\r\n                    autoComplete=\"off\"\r\n                  ></input>\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"add-product-input-div\">\r\n                  <p>Discount (in %)</p>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"discount\"\r\n                    value={newProduct.discount}\r\n                    onChange={handleChange}\r\n                    autoComplete=\"off\"\r\n                  ></input>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"add-product-input-div\">\r\n                  <p>Product Category</p>\r\n                  <select\r\n                    className=\"add-product-dropdown\"\r\n                    name=\"category\"\r\n                    id=\"category\"\r\n                    value={newProduct.category}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option className=\"add-product-dropdown-option\">\r\n                      select option\r\n                    </option>\r\n                    <option className=\"add-product-dropdown-option\">\r\n                    Casual wear \r\n                    </option>\r\n                    <option className=\"add-product-dropdown-option\">\r\n                    Ethnic wear\r\n                    </option>\r\n                    <option className=\"add-product-dropdown-option\">\r\n                    Feeding gown\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"add-product-input-div\">\r\n                  <p>Sleeve length</p>\r\n                  <select\r\n                    className=\"add-product-dropdown\"\r\n                    name=\"sleeveLength\"\r\n                    id=\"sleeveLength\"\r\n                    value={newProduct.sleeveLength}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option className=\"add-product-dropdown-option\">\r\n                      select option\r\n                    </option>\r\n                    <option className=\"add-product-dropdown-option\">\r\n                      Short Sleeve\r\n                    </option>\r\n                    <option className=\"add-product-dropdown-option\">\r\n                      Half Sleeve\r\n                    </option>\r\n                    <option className=\"add-product-dropdown-option\">\r\n                      Three-Quarter Sleeve\r\n                    </option>\r\n                    <option className=\"add-product-dropdown-option\">\r\n                      Full Sleeve\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"add-product-input-div\">\r\n                  <p>Pattern</p>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"pattern\"\r\n                    value={newProduct.pattern}\r\n                    onChange={handleChange}\r\n                    autoComplete=\"off\"\r\n                  ></input>\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"add-product-input-div\">\r\n                  <p>Fabric</p>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"fabric\"\r\n                    value={newProduct.fabric}\r\n                    onChange={handleChange}\r\n                    autoComplete=\"off\"\r\n                  ></input>\r\n                </div>\r\n              </Col>\r\n              </Row>\r\n              <Row>\r\n              <Col>\r\n                <div className=\"add-product-input-div\">\r\n                  <p>Stock Quantity (S - Size)</p>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"S_stock\"\r\n                    min={0}\r\n                    value={newProduct.S_stock}\r\n                    onChange={handleChange}\r\n                    autoComplete=\"off\"\r\n                  ></input>\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"add-product-input-div\">\r\n                  <p>Stock Quantity (M - Size)</p>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"M_stock\"\r\n                    min={0}\r\n                    value={newProduct.M_stock}\r\n                    onChange={handleChange}\r\n                    autoComplete=\"off\"\r\n                  ></input>\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"add-product-input-div\">\r\n                  <p>Stock Quantity (L - Size)</p>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"L_stock\"\r\n                    min={0}\r\n                    value={newProduct.L_stock}\r\n                    onChange={handleChange}\r\n                    autoComplete=\"off\"\r\n                  ></input>\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"add-product-input-div\">\r\n                  <p>Stock Quantity (XL - Size)</p>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"XL_stock\"\r\n                    min={0}\r\n                    value={newProduct.XL_stock}\r\n                    onChange={handleChange}\r\n                    autoComplete=\"off\"\r\n                  ></input>\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"add-product-input-div\">\r\n                  <p>Stock Quantity (XXL - Size)</p>\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"XXL_stock\"\r\n                    min={0}\r\n                    value={newProduct.XXL_stock}\r\n                    onChange={handleChange}\r\n                    autoComplete=\"off\"\r\n                  ></input>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div className=\"add-product-input-div\">\r\n                  <p>Product Description</p>\r\n                  <textarea\r\n                    rows={8}\r\n                    name=\"description\"\r\n                    value={newProduct.description}\r\n                    onChange={handleChange}\r\n                  ></textarea>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <p>Paste Urls of Image. To get url please &nbsp;\r\n              <a href=\"https://imgur.com/upload\" target=\"__blank\"> click here</a>\r\n              .\r\n            </p>\r\n            <div className=\"add-product-input-div\">\r\n              <input type=\"text\" name=\"url1\" placeholder=\"Image url\" onChange={imagesHandle} autoComplete=\"off\" />\r\n            </div>\r\n            <div className=\"add-product-input-div\">\r\n              <input type=\"text\" name=\"url2\" placeholder=\"Image url\" onChange={imagesHandle} autoComplete=\"off\" />\r\n            </div>\r\n            <div className=\"add-product-input-div\">\r\n              <input type=\"text\" name=\"url3\" placeholder=\"Image url\" onChange={imagesHandle} autoComplete=\"off\" />\r\n            </div>\r\n            <div className=\"add-product-input-div\">\r\n              <input type=\"text\" name=\"url4\" placeholder=\"Image url\" onChange={imagesHandle} autoComplete=\"off\" />\r\n            </div>\r\n            <div className=\"add-product-input-div\">\r\n              <input type=\"text\" name=\"url5\" placeholder=\"Image url\" onChange={imagesHandle} autoComplete=\"off\" />\r\n            </div>\r\n            <div className=\"add-product-input-div\">\r\n              <input type=\"text\" name=\"url6\" placeholder=\"Image url\" onChange={imagesHandle} autoComplete=\"off\" />\r\n            </div>\r\n            <button onClick={addProduct} className=\"add-product-btn\">\r\n              Add Product\r\n            </button>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddProduct;","D:\\Tanot\\admin\\src\\Core\\Product Pages\\Products.js",["107","108","109","110"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Card, Col, Row } from \"react-bootstrap\";\r\nimport Sidebar from \"../../Components/Sidebar\";\r\nimport { RiDeleteBin3Line, RiEditLine } from \"react-icons/ri\";\r\n\r\nimport \"./Products.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Products() {\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n\r\n  const getProducts = async() => {\r\n    setProducts([]);\r\n   await axios({\r\n      method: \"get\",\r\n      url: \"/getproducts\",\r\n    }).then((response) => {\r\n      setProducts(response.data);\r\n      setFilteredProducts(response.data);\r\n    });\r\n  };\r\n\r\n  const deleteProduct = async(productId) => {\r\n    await axios({\r\n      method: \"delete\",\r\n      url: `/deleteProduct/${productId}`,\r\n    }).then((response) => {\r\n      // console.log(response.data);\r\n      getProducts();\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"dashboard-parent-div\">\r\n      <Row>\r\n        <Col lg={2}>\r\n          <Sidebar />\r\n        </Col>\r\n        <Col className=\"products-content\" lg={10}>\r\n          <Row>\r\n            <Col lg={8}>\r\n              <h4>Products</h4>\r\n              <p>Below are the products currently added to your website.</p>\r\n            </Col>\r\n          </Row>\r\n          <hr />\r\n          <Row className=\"products-row\">\r\n            {filteredProducts.map((product) => {\r\n              {/* console.log(product.price); */}\r\n              const commaCost = product.price\r\n                .toString()\r\n                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n              return (\r\n                <Col lg={3}>\r\n                  <Card className=\"product-card\">\r\n                    <img\r\n                      src={`${product.images[0]}`}\r\n                      alt={product.name}\r\n                    />\r\n                    <h5>{product.title}</h5>\r\n                    <p>Cost : Rs. {commaCost}/-</p>\r\n                    <Link to={`/products/edit/${product._id}`}>\r\n                      <RiEditLine className=\"product-card-icon edit-icon\" />\r\n                    </Link>\r\n                    <RiDeleteBin3Line\r\n                      onClick={(event) => {\r\n                        event.preventDefault();\r\n                        deleteProduct(product._id);\r\n                      }}\r\n                      className=\"product-card-icon delete-icon\"\r\n                    />\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Products;","D:\\Tanot\\admin\\src\\Core\\Product Pages\\EditProduct.js",["111","112","113"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Card, Col, Form, Row } from \"react-bootstrap\";\r\nimport Sidebar from \"../../Components/Sidebar\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./EditProduct.css\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\nfunction EditProduct(props) {\r\n  const [productData, setProductData] = useState();\r\n  const { productId } = useParams(\"\");\r\n  useEffect(() => {\r\n    // getCategories();\r\n    getProduct();\r\n  }, []);\r\n\r\n  const getProduct = () => {\r\n    setProductData();\r\n    axios({\r\n      method: \"get\",\r\n      url: `/products/edit/${productId}`,\r\n    })\r\n      .then((response) => {\r\n        // alert(\"hi\");\r\n        // console.log(response.data);\r\n        setProductData(response.data);\r\n        // console.log(productData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error : \" + err.message);\r\n      });\r\n  };\r\n\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setProductData((prev) => {\r\n      return { ...prev, [name]: value };\r\n    });\r\n  };\r\n\r\n\r\n  const editProduct = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", productData.title);\r\n      formData.append(\"mrp\", productData.mrp);\r\n      formData.append(\"price\", productData.price);\r\n      formData.append(\"discount\", productData.discount);\r\n      // formData.append(\"S_stock\", productData.S_stock);\r\n      // formData.append(\"M_stock\", productData.M_stock);\r\n      // formData.append(\"L_stock\", productData.L_stock);\r\n      // formData.append(\"XL_stock\", productData.XL_stock);\r\n      // formData.append(\"XXL_stock\", productData.XXL_stock);\r\n      formData.append(\"category\", productData.category);\r\n      formData.append(\"description\", productData.description);\r\n      formData.append(\"images\", productData.images);\r\n      formData.append(\"fabric\", productData.fabric);\r\n      formData.append(\"pattern\", productData.pattern);\r\n      formData.append(\"sleeveLength\", productData.sleeveLength);\r\n      // console.log(formData.get(\"title\"));\r\n\r\n      axios({\r\n        method: \"patch\",\r\n        url: `/products/update/${productId}`,\r\n        data: formData,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }).then((response) => {\r\n        setProductData({\r\n          title: \"\",\r\n          mrp: \"\",\r\n          price: \"\",\r\n          discount: \"\",\r\n          S_stock: \"\",\r\n          M_stock: \"\",\r\n          L_stock: \"\",\r\n          XL_stock: \"\",\r\n          XXL_stock: \"\",\r\n          category: \"\",\r\n          description: \"\",\r\n          fabric: \"\",\r\n          sleeveLength: \"\",\r\n          pattern: \"\",\r\n        });\r\n        alert(\"product updated\");\r\n      });\r\n    } catch (err) {\r\n      console.log(\"Error : \" + err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-parent-div\">\r\n      <Row>\r\n        <Col lg={2}>\r\n          <Sidebar />\r\n        </Col>\r\n        <Col className=\"add-product-content\" lg={10}>\r\n          <h4>Update Product</h4>\r\n          {productData && (\r\n            <p>\r\n              Please fill the product details in the form below to update{\" \"}\r\n              <strong>{productData.title}</strong>.\r\n            </p>\r\n          )}\r\n          <Card className=\"add-product-form-card\">\r\n            {productData && (\r\n              <div>\r\n                <Row>\r\n                  <Col>\r\n                    <div className=\"add-product-input-div\">\r\n                      <p>Product Name</p>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        value={productData.title}\r\n                        onChange={handleChange}\r\n                        autoComplete=\"off\"\r\n                      ></input>\r\n                    </div>\r\n                  </Col>\r\n                  <Col>\r\n                    <div className=\"add-product-input-div\">\r\n                      <p>Product MRP</p>\r\n                      <input\r\n                        type=\"number\"\r\n                        name=\"mrp\"\r\n                        value={productData.mrp}\r\n                        onChange={handleChange}\r\n                        autoComplete=\"off\"\r\n                      ></input>\r\n                    </div>\r\n                  </Col>\r\n                  <Col>\r\n                    <div className=\"add-product-input-div\">\r\n                      <p>Product Price</p>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"price\"\r\n                        value={productData.price}\r\n                        onChange={handleChange}\r\n                        autoComplete=\"off\"\r\n                      ></input>\r\n                    </div>\r\n                  </Col>\r\n                  <Col>\r\n                    <div className=\"add-product-input-div\">\r\n                      <p>Discount (in %)</p>\r\n                      <input\r\n                        type=\"number\"\r\n                        name=\"discount\"\r\n                        value={productData.discount}\r\n                        onChange={handleChange}\r\n                        autoComplete=\"off\"\r\n                      ></input>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                <Col>\r\n                <div className=\"add-product-input-div\">\r\n                  <p>Product Category</p>\r\n                  <select\r\n                    className=\"add-product-dropdown\"\r\n                    name=\"category\"\r\n                    id=\"category\"\r\n                    value={productData.category}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option className=\"add-product-dropdown-option\">\r\n                      select option\r\n                    </option>\r\n                    <option className=\"add-product-dropdown-option\">\r\n                    Casual wear \r\n                    </option>\r\n                    <option className=\"add-product-dropdown-option\">\r\n                    Ethnic wear\r\n                    </option>\r\n                    <option className=\"add-product-dropdown-option\">\r\n                    Feeding gown\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"add-product-input-div\">\r\n                  <p>Sleeve length</p>\r\n                  <select\r\n                    className=\"add-product-dropdown\"\r\n                    name=\"sleeveLength\"\r\n                    id=\"sleeveLength\"\r\n                    value={productData.sleeveLength}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <option className=\"add-product-dropdown-option\">\r\n                      select option\r\n                    </option>\r\n                    <option className=\"add-product-dropdown-option\">\r\n                      Short Sleeve\r\n                    </option>\r\n                    <option className=\"add-product-dropdown-option\">\r\n                      Half Sleeve\r\n                    </option>\r\n                    <option className=\"add-product-dropdown-option\">\r\n                      Three-Quarter Sleeve\r\n                    </option>\r\n                    <option className=\"add-product-dropdown-option\">\r\n                      Full Sleeve\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"add-product-input-div\">\r\n                  <p>Pattern</p>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"pattern\"\r\n                    value={productData.pattern}\r\n                    onChange={handleChange}\r\n                    autoComplete=\"off\"\r\n                  ></input>\r\n                </div>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"add-product-input-div\">\r\n                  <p>Fabric</p>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"fabric\"\r\n                    value={productData.fabric}\r\n                    onChange={handleChange}\r\n                    autoComplete=\"off\"\r\n                  ></input>\r\n                </div>\r\n              </Col>\r\n              </Row>\r\n              <Row>\r\n                  <Col>\r\n                    <div className=\"add-product-input-div\">\r\n                      <p>Stock Quantity (S - Size)</p>\r\n                      <input\r\n                        type=\"number\"\r\n                        name=\"S_stock\"\r\n                        min={0}\r\n                        value={productData.S_stock}\r\n                        onChange={handleChange}\r\n                        autoComplete=\"off\"\r\n                      ></input>\r\n                    </div>\r\n                  </Col>\r\n                  <Col>\r\n                    <div className=\"add-product-input-div\">\r\n                      <p>Stock Quantity (M - Size)</p>\r\n                      <input\r\n                        type=\"number\"\r\n                        name=\"M_stock\"\r\n                        min={0}\r\n                        value={productData.M_stock}\r\n                        onChange={handleChange}\r\n                        autoComplete=\"off\"\r\n                      ></input>\r\n                    </div>\r\n                  </Col>\r\n                  <Col>\r\n                    <div className=\"add-product-input-div\">\r\n                      <p>Stock Quantity (L - Size)</p>\r\n                      <input\r\n                        type=\"number\"\r\n                        name=\"L_stock\"\r\n                        min={0}\r\n                        value={productData.L_stock}\r\n                        onChange={handleChange}\r\n                        autoComplete=\"off\"\r\n                      ></input>\r\n                    </div>\r\n                  </Col>\r\n                  <Col>\r\n                    <div className=\"add-product-input-div\">\r\n                      <p>Stock Quantity (XL - Size)</p>\r\n                      <input\r\n                        type=\"number\"\r\n                        name=\"XL_stock\"\r\n                        min={0}\r\n                        value={productData.XL_stock}\r\n                        onChange={handleChange}\r\n                        autoComplete=\"off\"\r\n                      ></input>\r\n                    </div>\r\n                  </Col>\r\n                  <Col>\r\n                    <div className=\"add-product-input-div\">\r\n                      <p>Stock Quantity (XXL - Size)</p>\r\n                      <input\r\n                        type=\"number\"\r\n                        name=\"XXL_stock\"\r\n                        min={0}\r\n                        value={productData.XXL_stock}\r\n                        onChange={handleChange}\r\n                        autoComplete=\"off\"\r\n                      ></input>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <div className=\"add-product-input-div\">\r\n                      <p>Product Description</p>\r\n                      <textarea\r\n                        rows={8}\r\n                        name=\"description\"\r\n                        value={productData.description}\r\n                        onChange={handleChange}\r\n                      ></textarea>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <button onClick={editProduct} className=\"add-product-btn\">\r\n                  Update Product\r\n                </button>\r\n              </div>\r\n            )}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditProduct;","D:\\Tanot\\admin\\src\\Core\\Complaints\\Complaints.js",["114","115","116"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Row, Button} from \"react-bootstrap\";\r\nimport Sidebar from \"../../Components/Sidebar\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nimport \"./Complaints.css\";\r\nimport axios from \"axios\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nconst deleteComplaint = async (id) => {\r\n  try {\r\n    const response = await axios.delete(`/admin/complaint/${id}`);\r\n    // Handle the response as needed\r\n    if (response.status === 204) {\r\n      // The complaint was deleted successfully\r\n      alert('Complaint deleted successfully please refresh page.');\r\n      // Perform any additional actions if needed\r\n    } else {\r\n      // Handle unexpected response status codes\r\n      console.log('Unexpected response:', response.status);\r\n    }\r\n    \r\n  } catch (err) {\r\n    alert(`complaint not removed.Server Error ${err.response.status}`)\r\n  }\r\n};\r\n\r\nconst columns = [\r\n  {\r\n    field: \"email\",\r\n    headerName: \"Customer ID\",\r\n    width: 250,\r\n    autoHeight: true,\r\n    // renderCell: (params) => {\r\n    //   return <Link to={`/users/${params.value}`}>{params.value}</Link>;\r\n    // },\r\n  },\r\n  {\r\n    field: \"name\",\r\n    headerName: \"Customer name\",\r\n    width: 240,\r\n    autoHeight: true,\r\n  },\r\n  {\r\n    field: \"number\",\r\n    headerName: \"Customer Phone\",\r\n    width: 180,\r\n    autoHeight: true,\r\n  },\r\n  {\r\n    field: \"orderId\",\r\n    headerName: \"Order ID\",\r\n    width: 100,\r\n    autoHeight: true,\r\n    // renderCell: (params) => {\r\n    //   return <Link to={`/orders/${params.value}`}>{params.value}</Link>;\r\n    // },\r\n  },\r\n  {\r\n    field: \"complaint\",\r\n    headerName: \"Feedback & Complaints\",\r\n    width: 250,\r\n    autoHeight: true,\r\n  },\r\n  {\r\n    field:\"deleteComplaint\",\r\n    headerName:\"Solved? (Delete)\",\r\n    width:200,\r\n    autoHeight:true,\r\n    renderCell: (params) => {\r\n      return (\r\n        <Button\r\n          variant=\"contained\"\r\n          // color=\"warning\"\r\n          onClick={() => deleteComplaint(params.value)}\r\n          className=\"c-delete-btn\"\r\n        >\r\n        Delete  \r\n        </Button>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\n\r\nfunction Complaints() {\r\n  const [pages, setPages] = useState(5);\r\n  const [complaints, setComplaints] = useState([]);\r\n  //set loading\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  function setRows(item, index) {\r\n    // console.log(item.id);\r\n    const row = {\r\n      id: index + 1,\r\n      email: item.id,\r\n      name: item.name,\r\n      number: item.number,\r\n      orderId: item.orderId,\r\n      complaint: item.complaint,\r\n      deleteComplaint: item._id\r\n    };\r\n\r\n    setComplaints((prevComplaints) => [\r\n      ...prevComplaints,\r\n      row,\r\n    ]);\r\n\r\n  }\r\n  const getComplaints = async () => {\r\n    try {\r\n\r\n      const response = await axios.get(\"/admin/complaints\");\r\n      const data = response.data;\r\n\r\n      data.forEach(setRows);\r\n\r\n      setLoading(false);\r\n      // console.log(complaints);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setComplaints([]);\r\n    getComplaints();\r\n  }, []);\r\n  \r\n \r\n\r\n \r\n\r\n\r\n\r\n  return (\r\n    <div className=\"dashboard-parent-div\">\r\n      <Row>\r\n        <Col lg={2}>\r\n          <Sidebar />\r\n        </Col>\r\n        <Col className=\"complaints-content\" lg={10}>\r\n          <h4>Complaints & Feedbacks</h4>\r\n          <p>\r\n            Below are all the feedbacks and complaints provided by your\r\n            customers.\r\n          </p>\r\n          <hr />\r\n          {\r\n            loading ? <div>\r\n              <h1>Loading</h1> \r\n              <h3>It's good to delete complaints those are spam and those you have solved </h3> \r\n              </div>:\r\n              <DataGrid\r\n                rows={complaints}\r\n                columns={columns}\r\n                getRowHeight={() => 'auto'}\r\n                getRowId={(row) => row.id}\r\n                \r\n              />\r\n          }\r\n\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Complaints;\r\n","D:\\Tanot\\admin\\src\\Components\\Sidebar.js",["117","118","119","120","121"],"import React, {useState, useContext, useEffect} from \"react\";\r\nimport {\r\n  RiDashboardLine,\r\n  RiShoppingCart2Line,\r\n  RiUser3Line,\r\n  RiAddFill,\r\n  RiFileList3Line,\r\n  RiFeedbackLine,\r\n} from \"react-icons/ri\";\r\nimport { LoginContext } from \"./contextProvider\";\r\n\r\nimport { IoIosLaptop } from \"react-icons/io\";\r\n\r\nimport logo from \"../Assets/logo.png\";\r\nimport \"./Sidebar.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction Sidebar() {\r\n  const history = useHistory();\r\n  const { account, setAccount } = useContext(LoginContext);\r\n\r\n  const isActive = (history, path) => {\r\n    if (history.location.pathname === path) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  // setAccount(1);\r\n//   const getDetailValidAdmin = async () => {\r\n//     const res = await fetch(\"/validadmin\", {\r\n//         method: \"GET\",\r\n//         headers: {\r\n//             Accept: \"application/json\",\r\n//             \"Content-Type\": \"application/json\",\r\n//         },\r\n//         credentials: \"include\",\r\n//     });\r\n\r\n//     const data = await res.json();\r\n//     // console.log(data);\r\n//     if (res.status === 201) {\r\n//         console.log(\"data valid\");\r\n//         setAccount(data);\r\n//     } else {\r\n//         console.log(\"cookies error\");\r\n//     }\r\n// };\r\n\r\n// useEffect(()=>{\r\n//   // setAccount(1);\r\n//   getDetailValidAdmin();\r\n// })\r\n  return (\r\n    <>\r\n    <div className=\"sidebar-parent-div\">\r\n      <div className=\"sidebar-content-div\">\r\n        <div className=\"sidebar-logo-div\">\r\n          <img src={logo} alt=\"LOGO\" />\r\n          <h4>TANOT</h4>\r\n        </div>\r\n        <div className=\"sidebar-links-div\">\r\n          <Link to=\"/\" className=\"sidebar-link\">\r\n            <div\r\n              className={`sidebar-item ${isActive(history, \"/\") && \"active\"}`}\r\n            >\r\n              <RiDashboardLine className=\"sidebar-icon\" />\r\n              <p>Dashboard</p>\r\n            </div>\r\n          </Link>\r\n          <Link to=\"/products\" className=\"sidebar-link\">\r\n            <div\r\n              className={`sidebar-item ${\r\n                isActive(history, \"/products\") && \"active\"\r\n              }`}\r\n            >\r\n              <IoIosLaptop className=\"sidebar-icon\" />\r\n              <p>Products</p>\r\n            </div>\r\n          </Link>\r\n          <Link to=\"/products/add\" className=\"sidebar-link\">\r\n            <div\r\n              className={`sidebar-item ${\r\n                isActive(history, \"/products/add\") && \"active\"\r\n              }`}\r\n            >\r\n              <RiAddFill className=\"sidebar-icon\" />\r\n              <p>Add Product</p>\r\n            </div>\r\n          </Link>\r\n          <Link to=\"/orders\" className=\"sidebar-link\">\r\n            <div\r\n              className={`sidebar-item ${\r\n                isActive(history, \"/orders\") && \"active\"\r\n              }`}\r\n            >\r\n              <RiShoppingCart2Line className=\"sidebar-icon\" />\r\n              <p>Orders</p>\r\n            </div>\r\n          </Link>\r\n          <Link to=\"/users\" className=\"sidebar-link\">\r\n            <div\r\n              className={`sidebar-item ${\r\n                isActive(history, \"/users\") && \"active\"\r\n              }`}\r\n            >\r\n              <RiUser3Line className=\"sidebar-icon\" />\r\n              <p>Users</p>\r\n            </div>\r\n          </Link>\r\n          {/* <Link to=\"/complaints\" className=\"sidebar-link\"> */}\r\n\r\n          <Link to=\"/complaints\" className=\"sidebar-link\">\r\n            <div\r\n              className={`sidebar-item ${\r\n                isActive(history, \"/complaints\") && \"active\"\r\n              }`}\r\n            >\r\n              <RiFeedbackLine className=\"sidebar-icon\" />\r\n              <p>Complaints & Feedbacks</p>\r\n            </div>\r\n\r\n          </Link>\r\n          <Link to=\"/Auth\" className=\"sidebar-link\">\r\n            <div\r\n              className={`sidebar-item ${\r\n                isActive(history, \"/Auth\") && \"active\"\r\n              }`}\r\n            >\r\n              <p>LogIn</p>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n        <div className=\"sidebar-footer-div\">\r\n          <p>© Copyright Tanot.com</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n        }\r\n\r\nexport default Sidebar;\r\n","D:\\Tanot\\admin\\src\\Core\\Category Pages\\Categories.js",[],"D:\\Tanot\\admin\\src\\Core\\Category Pages\\AddCategory.js",["122"],"D:\\Tanot\\admin\\src\\Core\\Category Pages\\CategoryProduct.js",["123","124"],"D:\\Tanot\\admin\\src\\Core\\Category Pages\\EditCategory.js",["125"],"D:\\Tanot\\admin\\src\\Core\\Auth\\Auth.js",["126","127","128"],"import React, {useContext, useState} from 'react'\r\nimport ContextProvider, { LoginContext } from '../../Components/contextProvider'\r\nimport { Col, Row, Button} from \"react-bootstrap\";\r\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\r\nimport axios from 'axios'\r\nimport Sidebar from '../../Components/Sidebar'\r\nimport './Auth.css'\r\n\r\nexport default function Auth() {\r\n\r\n    const {account, setAccount} =useContext(LoginContext);\r\n    const history = useHistory(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n   \r\n    // { console.log(account); }\r\n    // if(account){\r\n    //  history.push(\"/\");\r\n    // }\r\n\r\nconst submit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n\r\n        await axios({\r\n            method: \"post\",\r\n            url: \"/adminlogin\",\r\n            data: {\r\n                email:email,\r\n                password:password,\r\n              },\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n          }).then(async (response) => {\r\n            if (response.status === 201) {\r\n                history.push(\"/\");\r\n            }\r\n            else{\r\n                alert(\"Login falied\");\r\n            }\r\n        })\r\n      \r\n    } catch (err) {\r\n      alert(`authentication error, sServer Error ${err.response.status}`)\r\n    }\r\n  };\r\n\r\n    return (\r\n        <div className='dashboard-parent-div'>\r\n        <Row>\r\n        <Col lg={2}>\r\n          <Sidebar />\r\n        </Col>\r\n        <Col className=\"complaints-content\" lg={10}>\r\n          <h4 style={{textAlign:\"center\"}}>Login</h4>\r\n          \r\n        <div className=\"text-center m-10-auto\">\r\n            <h2>Sign in to Admin</h2>\r\n            <form action=\"/home\">\r\n                <p>\r\n                    <label>Username or email address</label><br/>\r\n                    <input type=\"text\" name=\"first_name\" onChange={(e)=>{setEmail(e.target.value); console.log(email);}} required />\r\n                </p>\r\n                <p>\r\n                    <label>Password</label>\r\n                    <br/>\r\n                    <input type=\"password\" name=\"password\" onChange={(e)=>{setPassword(e.target.value)}} required />\r\n                </p>\r\n                <p>\r\n                {/* {console.log(email)} */}\r\n                    <Button id=\"sub_btn\" type=\"submit\" onClick={submit} className='my-3 px-4 py-2'>Login</Button>\r\n                </p>\r\n            </form>\r\n        </div>\r\n        </Col>\r\n        </Row>\r\n        </div>\r\n    )\r\n}","D:\\Tanot\\admin\\src\\Components\\contextProvider.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":98,"column":36,"nodeType":"135","messageId":"136","endLine":98,"endColumn":38},{"ruleId":"133","severity":1,"message":"134","line":100,"column":40,"nodeType":"135","messageId":"136","endLine":100,"endColumn":42},{"ruleId":"133","severity":1,"message":"134","line":102,"column":40,"nodeType":"135","messageId":"136","endLine":102,"endColumn":42},{"ruleId":"137","severity":1,"message":"138","line":11,"column":10,"nodeType":"139","messageId":"140","endLine":11,"endColumn":20},{"ruleId":"137","severity":1,"message":"141","line":8,"column":3,"nodeType":"139","messageId":"140","endLine":8,"endColumn":14},{"ruleId":"137","severity":1,"message":"142","line":9,"column":3,"nodeType":"139","messageId":"140","endLine":9,"endColumn":14},{"ruleId":"137","severity":1,"message":"143","line":10,"column":3,"nodeType":"139","messageId":"140","endLine":10,"endColumn":21},{"ruleId":"144","severity":1,"message":"145","line":23,"column":6,"nodeType":"146","endLine":23,"endColumn":8,"suggestions":"147"},{"ruleId":"144","severity":1,"message":"148","line":42,"column":6,"nodeType":"146","endLine":42,"endColumn":8,"suggestions":"149"},{"ruleId":"133","severity":1,"message":"134","line":120,"column":39,"nodeType":"135","messageId":"136","endLine":120,"endColumn":41},{"ruleId":"133","severity":1,"message":"134","line":122,"column":42,"nodeType":"135","messageId":"136","endLine":122,"endColumn":44},{"ruleId":"133","severity":1,"message":"134","line":124,"column":44,"nodeType":"135","messageId":"136","endLine":124,"endColumn":46},{"ruleId":"137","severity":1,"message":"150","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":26},{"ruleId":"137","severity":1,"message":"151","line":1,"column":28,"nodeType":"139","messageId":"140","endLine":1,"endColumn":34},{"ruleId":"137","severity":1,"message":"152","line":2,"column":21,"nodeType":"139","messageId":"140","endLine":2,"endColumn":25},{"ruleId":"133","severity":1,"message":"134","line":90,"column":29,"nodeType":"135","messageId":"136","endLine":90,"endColumn":31},{"ruleId":"137","severity":1,"message":"153","line":11,"column":10,"nodeType":"139","messageId":"140","endLine":11,"endColumn":18},{"ruleId":"137","severity":1,"message":"154","line":13,"column":10,"nodeType":"139","messageId":"140","endLine":13,"endColumn":21},{"ruleId":"137","severity":1,"message":"155","line":13,"column":23,"nodeType":"139","messageId":"140","endLine":13,"endColumn":37},{"ruleId":"156","severity":1,"message":"157","line":57,"column":15,"nodeType":"158","messageId":"159","endLine":57,"endColumn":50},{"ruleId":"137","severity":1,"message":"151","line":1,"column":28,"nodeType":"139","messageId":"140","endLine":1,"endColumn":34},{"ruleId":"137","severity":1,"message":"152","line":2,"column":21,"nodeType":"139","messageId":"140","endLine":2,"endColumn":25},{"ruleId":"144","severity":1,"message":"160","line":15,"column":6,"nodeType":"146","endLine":15,"endColumn":8,"suggestions":"161"},{"ruleId":"137","severity":1,"message":"162","line":87,"column":10,"nodeType":"139","messageId":"140","endLine":87,"endColumn":15},{"ruleId":"137","severity":1,"message":"163","line":87,"column":17,"nodeType":"139","messageId":"140","endLine":87,"endColumn":25},{"ruleId":"144","severity":1,"message":"164","line":128,"column":6,"nodeType":"146","endLine":128,"endColumn":8,"suggestions":"165"},{"ruleId":"137","severity":1,"message":"166","line":1,"column":16,"nodeType":"139","messageId":"140","endLine":1,"endColumn":24},{"ruleId":"137","severity":1,"message":"150","line":1,"column":38,"nodeType":"139","messageId":"140","endLine":1,"endColumn":47},{"ruleId":"137","severity":1,"message":"167","line":7,"column":3,"nodeType":"139","messageId":"140","endLine":7,"endColumn":18},{"ruleId":"137","severity":1,"message":"168","line":20,"column":11,"nodeType":"139","messageId":"140","endLine":20,"endColumn":18},{"ruleId":"137","severity":1,"message":"169","line":20,"column":20,"nodeType":"139","messageId":"140","endLine":20,"endColumn":30},{"ruleId":"137","severity":1,"message":"150","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"170","line":18,"column":6,"nodeType":"146","endLine":18,"endColumn":8,"suggestions":"171"},{"ruleId":"137","severity":1,"message":"172","line":55,"column":15,"nodeType":"139","messageId":"140","endLine":55,"endColumn":24},{"ruleId":"144","severity":1,"message":"173","line":23,"column":6,"nodeType":"146","endLine":23,"endColumn":8,"suggestions":"174"},{"ruleId":"137","severity":1,"message":"175","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":23},{"ruleId":"137","severity":1,"message":"168","line":11,"column":12,"nodeType":"139","messageId":"140","endLine":11,"endColumn":19},{"ruleId":"137","severity":1,"message":"169","line":11,"column":21,"nodeType":"139","messageId":"140","endLine":11,"endColumn":31},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'BsViewList' is defined but never used.","Identifier","unusedVar","'RiPhoneLine' is defined but never used.","'RiHome2Line' is defined but never used.","'RiShoppingCartLine' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getOrders' and 'getUser'. Either include them or remove the dependency array.","ArrayExpression",["178"],"React Hook useEffect has a missing dependency: 'getOrder'. Either include it or remove the dependency array.",["179"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'Form' is defined but never used.","'products' is assigned a value but never used.","'searchQuery' is assigned a value but never used.","'setSearchQuery' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'getProduct'. Either include it or remove the dependency array.",["180"],"'pages' is assigned a value but never used.","'setPages' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getComplaints'. Either include it or remove the dependency array.",["181"],"'useState' is defined but never used.","'RiFileList3Line' is defined but never used.","'account' is assigned a value but never used.","'setAccount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["182"],"'substring' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCategoryData'. Either include it or remove the dependency array.",["183"],"'ContextProvider' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},"Update the dependencies array to be: [getOrders, getUser]",{"range":"196","text":"197"},"Update the dependencies array to be: [getOrder]",{"range":"198","text":"199"},"Update the dependencies array to be: [getProduct]",{"range":"200","text":"201"},"Update the dependencies array to be: [getComplaints]",{"range":"202","text":"203"},"Update the dependencies array to be: [getProducts]",{"range":"204","text":"205"},"Update the dependencies array to be: [getCategoryData]",{"range":"206","text":"207"},[570,572],"[getOrders, getUser]",[947,949],"[getOrder]",[519,521],"[getProduct]",[3061,3063],"[getComplaints]",[627,629],"[getProducts]",[604,606],"[getCategoryData]"]