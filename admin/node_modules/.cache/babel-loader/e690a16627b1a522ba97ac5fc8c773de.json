{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tanot\\\\admin\\\\src\\\\Core\\\\Orders Pages\\\\Order.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Card, Col, Row } from \"react-bootstrap\";\nimport Sidebar from \"../../Components/Sidebar\";\nimport { RiMailLine, RiPhoneLine, RiHome2Line, RiUser3Line, RiUserLocationLine, RiCalendarEventLine, RiCalendarTodoLine, RiCalendarCheckLine, RiMoneyDollarCircleLine, RiQuestionLine } from \"react-icons/ri\";\nimport \"./Order.css\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Order(props) {\n  _s();\n  const [order, setOrder] = useState({});\n  const weekday = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\n  const month = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const history = useHistory();\n  const orderId = props.match.params.orderId;\n  useEffect(() => {\n    getOrder();\n  }, []);\n  const getOrder = () => {\n    axios({\n      method: \"get\",\n      url: `/admin/order/${orderId}`\n    }).then(response => {\n      setOrder(response.data);\n      console.log(response.data);\n      console.log(response.data);\n    });\n  };\n\n  // const updateOrderStatus = (event, status, shippedAt, deliveredAt) => {\n  //   event.preventDefault();\n  //   axios({\n  //     method: \"patch\",\n  //     url: `https://ecommerceappcj.herokuapp.com/api/orders/${orderId}`,\n  //     data: {\n  //       status: status,\n  //       shippedAt: shippedAt,\n  //       deliveredAt: deliveredAt,\n  //     },\n  //   }).then((res) => {\n  //     history.push(\"/orders\");\n  //   });\n  // };\n\n  // const deleteOrder = (event) => {\n  //   event.preventDefault();\n  //   axios({\n  //     method: \"delete\",\n  //     url: `https://ecommerceappcj.herokuapp.com/api/orders/${orderId}`,\n  //   }).then(() => {\n  //     history.push(\"/orders\");\n  //   });\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-parent-div\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(Order, \"YKwwOAYyxBJQSFUsB8zxAl9mZVU=\", false, function () {\n  return [useHistory];\n});\n_c = Order;\nexport default Order;\nvar _c;\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"names":["axios","React","useEffect","useState","Card","Col","Row","Sidebar","RiMailLine","RiPhoneLine","RiHome2Line","RiUser3Line","RiUserLocationLine","RiCalendarEventLine","RiCalendarTodoLine","RiCalendarCheckLine","RiMoneyDollarCircleLine","RiQuestionLine","useHistory","jsxDEV","_jsxDEV","Order","props","_s","order","setOrder","weekday","month","history","orderId","match","params","getOrder","method","url","then","response","data","console","log","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Tanot/admin/src/Core/Orders Pages/Order.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Card, Col, Row } from \"react-bootstrap\";\r\nimport Sidebar from \"../../Components/Sidebar\";\r\nimport {\r\n  RiMailLine,\r\n  RiPhoneLine,\r\n  RiHome2Line,\r\n  RiUser3Line,\r\n  RiUserLocationLine,\r\n  RiCalendarEventLine,\r\n  RiCalendarTodoLine,\r\n  RiCalendarCheckLine,\r\n  RiMoneyDollarCircleLine,\r\n  RiQuestionLine,\r\n} from \"react-icons/ri\";\r\n\r\nimport \"./Order.css\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction Order(props) {\r\n  const [order, setOrder] = useState({});\r\n  const weekday = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\r\n  const month = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  const history = useHistory();\r\n  const orderId = props.match.params.orderId;\r\n  useEffect(() => {\r\n    getOrder();\r\n  }, []);\r\n\r\n  const getOrder = () => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `/admin/order/${orderId}`,\r\n    }).then((response) => {\r\n      setOrder(response.data);\r\n      console.log(response.data);\r\n      console.log(response.data);\r\n    });\r\n  };\r\n\r\n  // const updateOrderStatus = (event, status, shippedAt, deliveredAt) => {\r\n  //   event.preventDefault();\r\n  //   axios({\r\n  //     method: \"patch\",\r\n  //     url: `https://ecommerceappcj.herokuapp.com/api/orders/${orderId}`,\r\n  //     data: {\r\n  //       status: status,\r\n  //       shippedAt: shippedAt,\r\n  //       deliveredAt: deliveredAt,\r\n  //     },\r\n  //   }).then((res) => {\r\n  //     history.push(\"/orders\");\r\n  //   });\r\n  // };\r\n\r\n  // const deleteOrder = (event) => {\r\n  //   event.preventDefault();\r\n  //   axios({\r\n  //     method: \"delete\",\r\n  //     url: `https://ecommerceappcj.herokuapp.com/api/orders/${orderId}`,\r\n  //   }).then(() => {\r\n  //     history.push(\"/orders\");\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <div className=\"dashboard-parent-div\">\r\n      {/* <Row>\r\n        <Col lg={2}>\r\n          <Sidebar />\r\n        </Col>\r\n        <Col className=\"single-order-content\" lg={10}>\r\n          {order && order.userId && (\r\n            <Card className=\"order-card\">\r\n              <Row className=\"order-user-details\">\r\n                <Col lg={3}>\r\n                  <img\r\n                    src={`https://ecommerceappcj.herokuapp.com/${order.userId.image}`}\r\n                    alt={order.userId.name}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Row>\r\n                    <Col className=\"user-detail-col\">\r\n                      <p>\r\n                        <RiUser3Line className=\"user-icon\" />{\" \"}\r\n                        {order.userId.name}\r\n                      </p>\r\n                      <p>\r\n                        <RiPhoneLine className=\"user-icon\" />{\" \"}\r\n                        {order.userId.phone}\r\n                      </p>\r\n                      <p>\r\n                        <RiMailLine className=\"user-icon\" />{\" \"}\r\n                        {order.userId.email}\r\n                      </p>\r\n                      <p>\r\n                        <RiHome2Line className=\"user-icon\" />{\" \"}\r\n                        {order.userId.address}, {order.userId.city} -{\" \"}\r\n                        {order.userId.pin}\r\n                      </p>\r\n                      <p>\r\n                        <RiUserLocationLine className=\"user-icon\" />{\" \"}\r\n                        {order.userId.state}\r\n                      </p>\r\n                    </Col>\r\n                    <Col className=\"order-detail-col\">\r\n                      <p>\r\n                        <RiQuestionLine className=\"order-icon\" />{\" \"}\r\n                        {order.status == \"placed\"\r\n                          ? \"Placed\"\r\n                          : order.status == \"shipped\"\r\n                          ? \"Shipped\"\r\n                          : order.status == \"delivered\"\r\n                          ? \"Delivered\"\r\n                          : \"Cancelled\"}\r\n                      </p>\r\n                      <p>\r\n                        <RiMoneyDollarCircleLine className=\"order-icon\" />{\" \"}\r\n                        {`Rs. ${order.orderAmount\r\n                          .toString()\r\n                          .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}/-`}\r\n                      </p>\r\n                      <p>\r\n                        <RiCalendarEventLine className=\"order-icon\" />{\" \"}\r\n                        {order.orderedAt}\r\n                      </p>\r\n                      <p>\r\n                        <RiCalendarTodoLine className=\"order-icon\" />{\" \"}\r\n                        {order.shippedAt}\r\n                      </p>\r\n                      <p>\r\n                        <RiCalendarCheckLine className=\"order-icon\" />{\" \"}\r\n                        {order.deliveredAt}\r\n                      </p>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"order-actions\">\r\n                <Col>\r\n                  <button\r\n                    onClick={(e) => {\r\n                      let date = new Date();\r\n                      const day = weekday[date.getDay()];\r\n                      updateOrderStatus(\r\n                        e,\r\n                        \"shipped\",\r\n                        `${day}, ${date.getDate()} ${\r\n                          month[date.getMonth()]\r\n                        } ${date.getFullYear()}`,\r\n                        \"Not yet delivered\"\r\n                      );\r\n                    }}\r\n                  >\r\n                    Order Shipped\r\n                  </button>\r\n                </Col>\r\n                <Col>\r\n                  <button\r\n                    onClick={(e) => {\r\n                      let date = new Date();\r\n                      const day = weekday[date.getDay()];\r\n                      updateOrderStatus(\r\n                        e,\r\n                        \"delivered\",\r\n                        order.shippedAt,\r\n                        `${day}, ${date.getDate()} ${\r\n                          month[date.getMonth()]\r\n                        } ${date.getFullYear()}`\r\n                      );\r\n                    }}\r\n                  >\r\n                    Order Delivered\r\n                  </button>\r\n                </Col>\r\n                <Col>\r\n                  <button\r\n                    onClick={(e) => {\r\n                      updateOrderStatus(\r\n                        e,\r\n                        \"cancelled\",\r\n                        order.shippedAt,\r\n                        order.deliveredAt\r\n                      );\r\n                    }}\r\n                  >\r\n                    Order Cancelled\r\n                  </button>\r\n                </Col>\r\n                <Col>\r\n                  <button onClick={deleteOrder}>Delete Order</button>\r\n                </Col>\r\n              </Row>\r\n              <div className=\"order-products-div\">\r\n                {order.products &&\r\n                  order.products.map((item) => {\r\n                    return (\r\n                      <Card className=\"order-product-card\">\r\n                        <Row className=\"product-card-row\">\r\n                          <Col className=\"product-image-col\">\r\n                            <img\r\n                              src={`https://ecommerceappcj.herokuapp.com/${item.productId.image}`}\r\n                              alt={item.productId.name}\r\n                            />\r\n                          </Col>\r\n                          <Col className=\"product-order-details\" lg={10}>\r\n                            <Row>\r\n                              <Col>\r\n                                <Row>\r\n                                  <Col lg={2}>\r\n                                    <p>Product ID :</p>\r\n                                  </Col>\r\n                                  <Col>\r\n                                    <p>\r\n                                      <strong>{item.productId.id}</strong>\r\n                                    </p>\r\n                                  </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                  <Col lg={2}>\r\n                                    <p>Name :</p>\r\n                                  </Col>\r\n                                  <Col>\r\n                                    <p>\r\n                                      <strong>{item.productId.name}</strong>\r\n                                    </p>\r\n                                  </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                  <Col lg={2}>\r\n                                    <p>Price :</p>\r\n                                  </Col>\r\n                                  <Col>\r\n                                    <p>\r\n                                      <strong>\r\n                                        Rs.{\" \"}\r\n                                        {item.productId.price\r\n                                          .toString()\r\n                                          .replace(\r\n                                            /\\B(?=(\\d{3})+(?!\\d))/g,\r\n                                            \",\"\r\n                                          )}\r\n                                        /-\r\n                                      </strong>\r\n                                    </p>\r\n                                  </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                  <Col lg={2}>\r\n                                    <p>Category ID :</p>\r\n                                  </Col>\r\n                                  <Col>\r\n                                    <p>\r\n                                      <strong>{item.productId.category}</strong>\r\n                                    </p>\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>\r\n                              <Col>\r\n                                <Row>\r\n                                  <Col lg={2}>\r\n                                    <p>Quantity :</p>\r\n                                  </Col>\r\n                                  <Col>\r\n                                    <p>\r\n                                      <strong>{item.quantity}</strong>\r\n                                    </p>\r\n                                  </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                  <Col lg={2}>\r\n                                    <p>Item Total :</p>\r\n                                  </Col>\r\n                                  <Col>\r\n                                    <p>\r\n                                      <strong>\r\n                                        Rs.&nbsp;\r\n                                        {item.total\r\n                                          .toString()\r\n                                          .replace(\r\n                                            /\\B(?=(\\d{3})+(?!\\d))/g,\r\n                                            \",\"\r\n                                          )}\r\n                                        /-\r\n                                      </strong>\r\n                                    </p>\r\n                                  </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                  <Col lg={2}>\r\n                                    <p>Description :</p>\r\n                                  </Col>\r\n                                  <Col>\r\n                                    <p>\r\n                                      <strong>\r\n                                        {item.productId.description}\r\n                                      </strong>\r\n                                    </p>\r\n                                  </Col>\r\n                                </Row>\r\n                              </Col>\r\n                            </Row>\r\n                          </Col>\r\n                        </Row>\r\n                      </Card>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </Card>\r\n          )}\r\n        </Col>\r\n      </Row> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Order;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAChD,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,SACEC,UAAU,EACVC,WAAW,EACXC,WAAW,EACXC,WAAW,EACXC,kBAAkB,EAClBC,mBAAmB,EACnBC,kBAAkB,EAClBC,mBAAmB,EACnBC,uBAAuB,EACvBC,cAAc,QACT,gBAAgB;AAEvB,OAAO,aAAa;AACpB,SAASC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAMuB,OAAO,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC;EAClE,MAAMC,KAAK,GAAG,CACZ,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;EACD,MAAMC,OAAO,GAAGV,UAAU,CAAC,CAAC;EAC5B,MAAMW,OAAO,GAAGP,KAAK,CAACQ,KAAK,CAACC,MAAM,CAACF,OAAO;EAC1C3B,SAAS,CAAC,MAAM;IACd8B,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,QAAQ,GAAGA,CAAA,KAAM;IACrBhC,KAAK,CAAC;MACJiC,MAAM,EAAE,KAAK;MACbC,GAAG,EAAG,gBAAeL,OAAQ;IAC/B,CAAC,CAAC,CAACM,IAAI,CAAEC,QAAQ,IAAK;MACpBX,QAAQ,CAACW,QAAQ,CAACC,IAAI,CAAC;MACvBC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACC,IAAI,CAAC;MAC1BC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACC,IAAI,CAAC;IAC5B,CAAC,CAAC;EACJ,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEjB,OAAA;IAAKoB,SAAS,EAAC;EAAsB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAuPhC,CAAC;AAEV;AAACrB,EAAA,CArTQF,KAAK;EAAA,QAiBIH,UAAU;AAAA;AAAA2B,EAAA,GAjBnBxB,KAAK;AAuTd,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}